name: Update PR Status

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - 'dev'

jobs:
  update_pr_status:
    runs-on: ubuntu-latest

    steps:
      - name: Printing the current context
        uses: actions/github-script@v6
        with:
          script: |
            console.log("context")
            console.log(context)

      - name: Determine if push is to dev branch
        id: is_dev_branch
        run: echo "::set-output name=is_dev::${{ startsWith(github.ref, 'refs/heads/dev') }}"



      - name: Determine if any pr open with this commit
        if: ${{steps.is_dev_branch.outputs.is_dev != 'true'}}
        uses: actions/github-script@v6
        with:
          script: |
            const devCommit = context.payload.after;
            const {data} = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.payload.after,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            if(data.length == 0){
              throw new Error("No PR to tag")
            }

            console.log("tag with merge and rm unmerged")




      - name: Determine if latest pr commit exists in dev branch
        if: ${{steps.is_dev_branch.outputs.is_dev != 'true'}}
        uses: actions/github-script@v6
        with:
          script: |
            const prCommit = context.payload.after;

            const devCommits = await github.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: 'dev'
            });

            const commitExistsInDev = devCommits.data.some(commit => commit.sha === prCommit);
            if(commitExistsInDev){
              console.log("tag with merge and rm unmerged")
            }else{
              console.log("tag with unmerge and rm merged")
            }

          

    